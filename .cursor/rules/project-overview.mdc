---
alwaysApply: true
---

# Xi Manager - Project Overview ðŸ¤–

## Project Information
- **Full Name**: Xi Manager  
- **Short Name**: ximanager  
- **Description**: An AI-powered Telegram bot simulating Xi Jinpingâ€™s personal assistant. Integrates with multiple AI providers to process user queries.  

## Technical Specifications
- **Go Version**: 1.25+  
- **Main File**: program.go  
- **Architecture**: Monolithic Go application with a modular structure  

## Technology Stack
- **Language**: Golang  
- **Telegram API**: tgbotapi  
- **Dependency Injection**: Uber-Fx  
- **Logging**: slog (structured logging)  
- **ORM**: GORM with GORM-gen for DAO generation  
- **Caching**: go-redis  
- **Database**: PostgreSQL  
- **Cache**: Redis  
- **Containerization**: Docker, docker-compose  

## AI Integrations
- **OpenAI API** â€“ GPT models  
- **DeepSeek API** â€“ DeepSeek models  
- **Anthropic API** â€“ Claude models  
- **xAI API** â€“ Grok models  
- **OpenRouter** â€“ Aggregator of various AI models  
- **Whisper** â€“ Speech-to-text  

## Core Modules
- **artificial**: Interaction with AI services  
- **external**: Connections to non-AI external services  
- **network**: HTTP client and networking utilities  
- **persistence**: Persistence layer (PostgreSQL + Redis)  
- **repository**: Repository pattern for data access  
- **telegram**: Telegram Bot API logic  
- **texting**: Text utilities  
- **throttler**: Rate limiting  
- **platform**: Core utilities and types  
- **tracing**: Structured logging and tracing  

## Key Entry Points
- **Main File**: [program.go](mdc:program.go)  
- **AI Configuration**: [sources/artificial/config.go](mdc:sources/artificial/config.go)  
- **Telegram Handler**: [sources/telegram/handler.go](mdc:sources/telegram/handler.go)  
- **Database**: [sources/persistence/database.go](mdc:sources/persistence/database.go)  

## Architectural Principles
- **Pattern**: Modular architecture with Uber-Fx  
- **Structure**: Organized by functionality/domains  
- **DI**: Dependency Injection via Uber-Fx modules  
- **Logging**: Structured logging with slog  
- **Data**: Repository pattern with GORM ORM  