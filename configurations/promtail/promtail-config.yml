server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: ximanager_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: ximanager
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time
            container_name: attrs.name
            image: attrs.image
      
      - match:
          selector: '{container_name!="ximanager"}'
          action: drop
      
      # Парсим slog JSON структуру из поля log
      - json:
          expressions:
            slog_time: time
            slog_level: level
            slog_msg: msg
            exe_time: exe_time
            outsider_kind: outsider_kind
            proxy_url: proxy_url
            proxy_res: proxy_res
            ai_kind: ai_kind
            ai_model: ai_model
            ai_attempt: ai_attempt
            ai_backoff: ai_backoff
            inner_error: inner_error
            user_id: user_id
            user_name: user_name
            internal_user_active: internal_user_active
            internal_user_rights: internal_user_rights
            internal_user_window: internal_user_window
            internal_user_stack: internal_user_stack
            chat_type: chat_type
            chat_id: chat_id
            message_id: message_id
            message_date: message_date
            sql_query: sql_query
            ai_provider: ai_provider
            ai_tokens: ai_tokens
            mode_id: mode_id
            mode_name: mode_name
            command_issued: command_issued
            scope: scope
            internal_command: internal_command
          source: output
      - timestamp:
          source: slog_time
          format: RFC3339Nano
          fallback_formats:
            - RFC3339
            - "2006-01-02T15:04:05.000Z"
      
      - template:
          source: level
          template: '{{ .slog_level | ToLower }}'
      
      - labels:
          stream:
          level:
          container_name:
          image:
          ai_kind:
          ai_provider:
          outsider_kind:
          chat_type:
          user_id:
          mode_name:
          command_issued:
          scope:
      
      - structured_metadata:
          exe_time:
          ai_model:
          ai_attempt:
          ai_tokens:
          chat_id:
          message_id:
          mode_id:
          sql_query:
          internal_user_active:
          internal_user_rights:
          internal_user_window:
          internal_user_stack:
      
      - labeldrop:
          - filename
          - __path__
          - slog_time
          - slog_level
      
      - labelallow:
          - job
          - container_name
          - image
          - level
          - stream
          - ai_kind
          - ai_provider
          - outsider_kind
          - chat_type
          - user_id
          - mode_name
          - command_issued
          - scope
      
      - template:
          source: output
          template: '{{ .slog_msg | default .output }}' 